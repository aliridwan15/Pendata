Traceback (most recent call last):
  File "/usr/local/python/3.12.1/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/python/3.12.1/lib/python3.12/asyncio/base_events.py", line 684, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/codespace/.local/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.neighbors import NearestNeighbors

# Ambil data dari kedua database
df_postgresql = get_pg_data()
df_mysql = get_mysql_data()

# Gabungkan berdasarkan kolom 'id' dan 'Class'
df_merged = pd.merge(df_mysql, df_postgresql, on=["id", "class"], how="inner")

# Ambil data fitur numerik
feature_columns = ["petal_length", "petal_width", "sepal_length", "sepal_width"]
data_values = df_merged[feature_columns].values

# Gunakan KNN untuk mendeteksi outlier
K = 5  # Jumlah tetangga terdekat
nbrs = NearestNeighbors(n_neighbors=K+1, metric='euclidean').fit(data_values)
distances, indices = nbrs.kneighbors(data_values)

# Ambil rata-rata jarak ke K tetangga terdekat (tidak termasuk jarak ke dirinya sendiri)
df_merged["knn_distance"] = np.mean(distances[:, 1:], axis=1)

# Tentukan threshold outlier berdasarkan persentil ke-95
threshold = np.percentile(df_merged["knn_distance"], 95)
df_merged["outlier"] = df_merged["knn_distance"] > threshold

# Cetak 10 data dari Sepal
print("10 Data Sepal:")
print(df_merged[["id", "class", "sepal_length", "sepal_width", "outlier"]].head(10).to_string(index=False))

# Cetak 10 data dari Petal
print("\n10 Data Petal:")
print(df_merged[["id", "class", "petal_length", "petal_width", "outlier"]].head(10).to_string(index=False))

# Visualisasi scatter plot Sepal
plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df_merged["sepal_length"], y=df_merged["sepal_width"],
    hue=df_merged["outlier"], palette={False: "blue", True: "red"}
)
plt.title("Outlier Detection with KNN (Sepal)")
plt.show()

# Visualisasi scatter plot Petal
plt.figure(figsize=(8, 6))
sns.scatterplot(
    x=df_merged["petal_length"], y=df_merged["petal_width"],
    hue=df_merged["outlier"], palette={False: "blue", True: "red"}
)
plt.title("Outlier Detection with KNN (Petal)")
plt.show()
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mOperationalError[0m                          Traceback (most recent call last)
Cell [0;32mIn[5], line 8[0m
[1;32m      5[0m [38;5;28;01mfrom[39;00m [38;5;21;01msklearn[39;00m[38;5;21;01m.[39;00m[38;5;21;01mneighbors[39;00m [38;5;28;01mimport[39;00m NearestNeighbors
[1;32m      7[0m [38;5;66;03m# Ambil data dari kedua database[39;00m
[0;32m----> 8[0m df_postgresql [38;5;241m=[39m [43mget_pg_data[49m[43m([49m[43m)[49m
[1;32m      9[0m df_mysql [38;5;241m=[39m get_mysql_data()
[1;32m     11[0m [38;5;66;03m# Gabungkan berdasarkan kolom 'id' dan 'Class'[39;00m

Cell [0;32mIn[3], line 2[0m, in [0;36mget_pg_data[0;34m()[0m
[1;32m      1[0m [38;5;28;01mdef[39;00m [38;5;21mget_pg_data[39m():
[0;32m----> 2[0m     conn [38;5;241m=[39m [43mpsycopg2[49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m
[1;32m      3[0m [43m        [49m[43mhost[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mpostgreependat2-pendat4.h.aivencloud.com[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      4[0m [43m        [49m[43muser[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mavnadmin[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      5[0m [43m        [49m[43mpassword[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mAVNS_4T2SWDdsuTxisd9TzFux[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      6[0m [43m        [49m[43mdatabase[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mdefaultdb[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m      7[0m [43m        [49m[43mport[49m[38;5;241;43m=[39;49m[38;5;241;43m24915[39;49m
[1;32m      8[0m [43m    [49m[43m)[49m
[1;32m      9[0m     cursor [38;5;241m=[39m conn[38;5;241m.[39mcursor()
[1;32m     10[0m     cursor[38;5;241m.[39mexecute([38;5;124m"[39m[38;5;124mSELECT * FROM iris_postgresql[39m[38;5;124m"[39m)

File [0;32m/usr/local/python/3.12.1/lib/python3.12/site-packages/psycopg2/__init__.py:122[0m, in [0;36mconnect[0;34m(dsn, connection_factory, cursor_factory, **kwargs)[0m
[1;32m    119[0m     kwasync[[38;5;124m'[39m[38;5;124masync_[39m[38;5;124m'[39m] [38;5;241m=[39m kwargs[38;5;241m.[39mpop([38;5;124m'[39m[38;5;124masync_[39m[38;5;124m'[39m)
[1;32m    121[0m dsn [38;5;241m=[39m _ext[38;5;241m.[39mmake_dsn(dsn, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[0;32m--> 122[0m conn [38;5;241m=[39m [43m_connect[49m[43m([49m[43mdsn[49m[43m,[49m[43m [49m[43mconnection_factory[49m[38;5;241;43m=[39;49m[43mconnection_factory[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwasync[49m[43m)[49m
[1;32m    123[0m [38;5;28;01mif[39;00m cursor_factory [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m    124[0m     conn[38;5;241m.[39mcursor_factory [38;5;241m=[39m cursor_factory

[0;31mOperationalError[0m: FATAL:  password authentication failed for user "avnadmin"
FATAL:  no pg_hba.conf entry for host "23.97.62.142", user "avnadmin", database "defaultdb", no encryption


